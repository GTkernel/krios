apiVersion: v1
kind: ServiceAccount
metadata:
  name: krios-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: krios-controller-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "delete", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: krios-controller-rolebinding
subjects:
- kind: ServiceAccount
  name: krios-controller
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: krios-controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: krios-controller-deployment
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: krios-controller
  template:
    metadata:
      labels:
        app: krios-controller
    spec:
      serviceAccountName: krios-controller
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""  # Ensure this matches the label on your control plane nodes
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: krios-controller
        image: vaibhavb007/krios-controller
        imagePullPolicy: Always